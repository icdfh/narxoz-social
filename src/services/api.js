// src/utils/apiClient.js

import axios from "axios";

// üìå –±–µ—Ä—ë–º –∞–¥—Ä–µ—Å –∏–∑ .env (VITE_API_URL), –∏–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞:
//  - –≤ production: –∏—Å–ø–æ–ª—å–∑—É–µ–º prod-–∞–¥—Ä–µ—Å —Å /api/
//  - –≤ dev: localhost:8000/api/
const API_URL =
  import.meta.env.VITE_API_URL ||
  (import.meta.env.MODE === "production"
    ? "https://159.65.124.242/api/"
    : "http://127.0.0.1:8000/api/");

const apiClient = axios.create({
  baseURL: API_URL,
  withCredentials: true,      // –µ—Å–ª–∏ –Ω—É–∂–Ω—ã –∫—É–∫–∏
});

// –¥–æ–±–∞–≤–ª—è–µ–º JWT-—Ç–æ–∫–µ–Ω –∏–∑ localStorage –∫ –∫–∞–∂–¥–æ–º—É –∑–∞–ø—Ä–æ—Å—É
apiClient.interceptors.request.use((config) => {
  const token = localStorage.getItem("access") || localStorage.getItem("token");
  if (token) {
    config.headers.Authorization = `Bearer ${token}`;
  }
  return config;
});

// –ø—Ä–∏ 401 –º–æ–∂–Ω–æ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∞–≤—Ç–æ-—Ä–µ—Ñ—Ä–µ—à–∏—Ç—å —Ç–æ–∫–µ–Ω
apiClient.interceptors.response.use(
  (res) => res,
  async (err) => {
    const originalRequest = err.config;
    if (
      err.response?.status === 401 &&
      !originalRequest._retry &&
      localStorage.getItem("refresh")
    ) {
      originalRequest._retry = true;
      try {
        const { data } = await axios.post(
          `${API_URL}users/refresh/`,
          { refresh: localStorage.getItem("refresh") },
          { headers: { "Content-Type": "application/json" } }
        );
        localStorage.setItem("access", data.access);
        // –ø–æ–≤—Ç–æ—Ä—è–µ–º –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —É–∂–µ —Å –Ω–æ–≤—ã–º access
        originalRequest.headers.Authorization = `Bearer ${data.access}`;
        return apiClient(originalRequest);
      } catch {
        // –µ—Å–ª–∏ —Ä–µ—Ñ—Ä–µ—à –Ω–µ —É–¥–∞–ª—Å—è ‚Äî —á–∏—Å—Ç–∏–º –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ –ª–æ–≥–∏–Ω
        localStorage.clear();
        window.location.href = "/login";
      }
    }
    return Promise.reject(err);
  }
);

export default apiClient;
